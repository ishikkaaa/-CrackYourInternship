class Solution {
public:
    int findMaxValueOfEquation(vector<vector<int>>& points, int k) {
        int n=points.size();
        int ans=INT_MIN;
        deque<pair<int,int>>dq; //yi-xi,xi
        for(int i=0;i<n;i++){
            int xj=points[i][0];
            int yj=points[i][1];
            while(!dq.empty() && xj-dq.front().second>k){
                dq.pop_front();
            }
            if(!dq.empty()){
                ans=max(ans,xj+yj+dq.front().first);
            }
            while (!dq.empty() && yj - xj >= dq.back().first) {
                dq.pop_back();
            }
            dq.emplace_back(yj - xj, xj); //both emplace_back and push_back ultimately add an element to the end of a container, but they do so in slightly different ways that can affect performance.
        }
        return ans;
    }
};
